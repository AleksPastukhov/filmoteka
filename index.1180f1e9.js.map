{"mappings":"iiBAAAA,EAAA,S,sBCAA,IAAAC,EAAAD,EAAA,S,oDAMA,MAAME,EAAa,aAEbC,EAAU,IAAI,EAAAC,EAAAC,SAAQ,YAEtBC,EAAsBC,SAASC,cAAc,eAC7CC,EAAOF,SAASC,cAAc,gBAE9BE,EAAkB,IAAI,EAAAT,EAAAU,SAEtBC,EAAOL,SAASC,cAAc,gBAC9BK,EAAqBN,SAASC,cAAc,uBAElDI,EAAKE,iBAAiB,UAEtB,SAA0BC,GACxBA,EAAIC,iBAEJ,IAAIC,EAAO,EACX,MAAMC,EAAaH,EAAII,cAAcC,YAAYC,MAGjD,GAFAlB,EAAQmB,cAEHJ,EAMH,OALAL,EAAmBU,UAAUC,OAAO,mBACpCC,YAAW,KACTZ,EAAmBU,UAAUG,IAAI,qBAChC,WACHvB,EAAQwB,gBAIVjB,EACGkB,SAAS,SAAUX,EAAMC,GACzBW,MAAKC,IACJ,GAA6B,IAAzBA,EAAMC,QAAQC,OAOhB,OANAnB,EAAmBU,UAAUC,OAAO,mBAEpCC,YAAW,KACTZ,EAAmBU,UAAUG,IAAI,qBAChC,WACHvB,EAAQwB,iBAGV,EAAAM,EAAAC,wBAAuBhC,EAAY4B,EAAMC,SAEzCtB,EAAK0B,WAAY,EAAAC,EAAAC,sBAAqBP,EAAMC,SAC5C5B,EAAQwB,gBAER,MAAMW,EAAa,IAAIC,EAAAC,GAAJ,CAAelC,EAAqB,CACrDmC,WAAY,GAAGX,EAAMY,gBACrBC,aAAc,GACdC,aAAc,EACdC,aAAa,IAGfP,EAAWQ,MAAMhB,EAAMY,eACvBJ,EAAWS,GAAG,cAAcC,IAC1B7C,EAAQmB,aAERL,EAAO+B,EAAE/B,KACTP,EAAgBkB,SAAS,SAAUX,EAAMC,GAAYW,MAAKC,IACnDA,EAAMC,WAIX,EAAAK,EAAAC,sBAAqBP,EAAMC,UAE3B,EAAAE,EAAAC,wBAAuBhC,EAAY4B,EAAMC,SAEzCkB,OAAOC,SAAS,CACdC,SAAU,SACVC,IAAK,IAGPjD,EAAQwB,gBAAa,GACvB,GACF,IAED0B,OAAMC,GAAOC,QAAQC,IAAIF,KACzBG,QAAQ7C,EAAKkC,QAClB,ICrFAN,EAAAxC,EAAA,S,0BAAA,I,uCAOA,MAAM0D,EAAa,aAEbC,EAAU,IAAI,EAAAvD,EAAAC,SAAQ,YAEtBuD,EAAsBrD,SAASC,cAAc,eAC7CqD,EAAkB,IAAI,EAAA5D,EAAAU,SACtBmD,EAAOvD,SAASC,cAAc,iBAEpC,EAAAuD,EAAAC,4BA6CAvC,YAAW,MA3CXwC,uBACQJ,EACHjC,SAAS,UACTC,MAAKqC,IACJ,IAAKA,EAAKnC,QACR,QAEF,EAAAE,EAAAC,wBAAuBwB,EAAYQ,EAAKnC,SAExC+B,EAAK3B,WAAY,EAAAC,EAAAC,sBAAqB6B,EAAKnC,SAE3C,MAAMO,EAAa,IAAIC,EAAAC,GAAJ,CAAeoB,EAAqB,CACrDnB,WAAY,GAAGyB,EAAKxB,gBACpBC,aAAc,GACdC,aAAc,EACdC,aAAa,IAGfP,EAAWQ,MAAMoB,EAAKxB,eACtBJ,EAAWS,GAAG,cAAcC,IAC1BW,EAAQrC,aAER,IAAIL,EAAO+B,EAAE/B,KACb4C,EAAgBjC,SAAS,SAAUX,GAAMY,MAAKqC,IACvCA,EAAKnC,WAGV,EAAAE,EAAAC,wBAAuBwB,EAAYQ,EAAKnC,UAExC,EAAAK,EAAAC,sBAAqB6B,EAAKnC,SAE1BkB,OAAOC,SAAS,CACdC,SAAU,SACVC,IAAK,IAEPO,EAAQhC,gBAAa,GACvB,GACF,IAED0B,OAAMC,GAAOC,QAAQC,IAAIF,KACzBG,SACL,CAGEU,EAAA,GACC,G","sources":["src/index.js","src/js/renderOnSubmit-main-page.js","src/js/render-main-page.js"],"sourcesContent":["import './js/typed';\nimport './js/loader';\nimport './js/local-storage-info';\nimport './js/renderOnSubmit-main-page';\nimport './js/render-main-page';\nimport './js/roll-up-btn';\nimport './js/modal-students';\nimport './js/trailer';\nimport './js/modal';\nimport './js/renderModal';\nimport './js/modalBtnsAction';\nimport './js/dark-theme';\n","import FilmsApiService from './films-service';\nimport { renderFilmsToGallery } from './galleryFilmsMarkup';\nimport Pagination from 'tui-pagination';\nimport { Spinner } from './loader';\nimport { saveDataToLocalStorage } from './local-storage-info';\n\nconst FILMS_DATA = 'films-data';\n\nconst spinner = new Spinner('.spinner');\n\nconst paginationContainer = document.querySelector('#pagination');\nconst list = document.querySelector('.cards__list');\n\nconst filmsApiService = new FilmsApiService();\n\nconst form = document.querySelector('.form__input');\nconst headerNotification = document.querySelector('.search__error-text');\n\nform.addEventListener('submit', getFilmsOnSubmit);\n\nfunction getFilmsOnSubmit(evt) {\n  evt.preventDefault();\n\n  let page = 1;\n  const inputValue = evt.currentTarget.searchQuery.value;\n  spinner.addSpinner();\n\n  if (!inputValue) {\n    headerNotification.classList.remove('visually-hidden');\n    setTimeout(() => {\n      headerNotification.classList.add('visually-hidden');\n    }, 4500);\n    spinner.removeSpinner();\n    return;\n  }\n\n  filmsApiService\n    .getFilms('search', page, inputValue)\n    .then(films => {\n      if (films.results.length === 0) {\n        headerNotification.classList.remove('visually-hidden');\n\n        setTimeout(() => {\n          headerNotification.classList.add('visually-hidden');\n        }, 4500);\n        spinner.removeSpinner();\n        return;\n      }\n      saveDataToLocalStorage(FILMS_DATA, films.results);\n\n      list.innerHTML = renderFilmsToGallery(films.results);\n      spinner.removeSpinner();\n\n      const pagination = new Pagination(paginationContainer, {\n        totalItems: `${films.total_results}`,\n        itemsPerPage: 20,\n        visiblePages: 5,\n        centerAlign: true,\n      });\n\n      pagination.reset(films.total_results);\n      pagination.on('beforeMove', e => {\n        spinner.addSpinner();\n\n        page = e.page;\n        filmsApiService.getFilms('search', page, inputValue).then(films => {\n          if (!films.results) {\n            return;\n          }\n\n          renderFilmsToGallery(films.results);\n\n          saveDataToLocalStorage(FILMS_DATA, films.results);\n\n          window.scrollTo({\n            behavior: 'smooth',\n            top: 0,\n          });\n\n          spinner.removeSpinner();\n        });\n      });\n    })\n    .catch(err => console.log(err))\n    .finally(form.reset());\n}\n","import Pagination from 'tui-pagination';\nimport FilmsApiService from './films-service';\nimport { renderFilmsToGallery } from './galleryFilmsMarkup';\nimport { saveGenresToLocalStorage } from './genres';\nimport { Spinner } from './loader';\nimport { saveDataToLocalStorage } from './local-storage-info';\n\nconst FILMS_DATA = 'films-data';\n\nconst spinner = new Spinner('.spinner');\n\nconst paginationContainer = document.querySelector('#pagination');\nconst filmsApiService = new FilmsApiService();\nconst list = document.querySelector('.cards__list');\n\nsaveGenresToLocalStorage();\n\nasync function onFirstLoad() {\n  await filmsApiService\n    .getFilms('trends')\n    .then(data => {\n      if (!data.results) {\n        return;\n      }\n      saveDataToLocalStorage(FILMS_DATA, data.results);\n\n      list.innerHTML = renderFilmsToGallery(data.results);\n\n      const pagination = new Pagination(paginationContainer, {\n        totalItems: `${data.total_results}`,\n        itemsPerPage: 20,\n        visiblePages: 5,\n        centerAlign: true,\n      });\n\n      pagination.reset(data.total_results);\n      pagination.on('beforeMove', e => {\n        spinner.addSpinner();\n\n        let page = e.page;\n        filmsApiService.getFilms('trends', page).then(data => {\n          if (!data.results) {\n            return;\n          }\n          saveDataToLocalStorage(FILMS_DATA, data.results);\n\n          renderFilmsToGallery(data.results);\n\n          window.scrollTo({\n            behavior: 'smooth',\n            top: 0,\n          });\n          spinner.removeSpinner();\n        });\n      });\n    })\n    .catch(err => console.log(err))\n    .finally();\n}\n\nsetTimeout(() => {\n  onFirstLoad();\n}, 0);\n"],"names":["parcelRequire","$8Mjv6","$a1a3af92ad10c763$var$FILMS_DATA","$a1a3af92ad10c763$var$spinner","$kvC6y","Spinner","$a1a3af92ad10c763$var$paginationContainer","document","querySelector","$a1a3af92ad10c763$var$list","$a1a3af92ad10c763$var$filmsApiService","default","$a1a3af92ad10c763$var$form","$a1a3af92ad10c763$var$headerNotification","addEventListener","evt","preventDefault","page","inputValue","currentTarget","searchQuery","value","addSpinner","classList","remove","setTimeout","add","removeSpinner","getFilms","then","films","results","length","$x2KWZ","saveDataToLocalStorage","innerHTML","$7MS5A","renderFilmsToGallery","pagination","$parcel$interopDefault","$1VFfL","totalItems","total_results","itemsPerPage","visiblePages","centerAlign","reset","on","e","window","scrollTo","behavior","top","catch","err","console","log","finally","$389ece23d7c35ce0$var$FILMS_DATA","$389ece23d7c35ce0$var$spinner","$389ece23d7c35ce0$var$paginationContainer","$389ece23d7c35ce0$var$filmsApiService","$389ece23d7c35ce0$var$list","$twtVq","saveGenresToLocalStorage","async","data","$389ece23d7c35ce0$var$onFirstLoad"],"version":3,"file":"index.1180f1e9.js.map"}