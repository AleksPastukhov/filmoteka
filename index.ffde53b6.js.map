{"mappings":"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","sources":["node_modules/@parcel/runtime-js/lib/runtime-6d8d167d95fee5c7.js","src/index.js","src/js/renderOnSubmit-main-page.js","node_modules/@parcel/runtime-js/lib/runtime-0c5cafe5a3b8c611.js","src/js/galleryFilmsMarkup.js","src/js/render-main-page.js"],"sourcesContent":["require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"EVgbq\\\":\\\"index.ffde53b6.js\\\",\\\"3mDlJ\\\":\\\"movie-poster-coming-soon.0dfc56a4.jpg\\\",\\\"3mEuC\\\":\\\"library.b4861dd8.css\\\",\\\"fEwsi\\\":\\\"library.534c524b.js\\\"}\"));","import './js/typed';\nimport './js/loader';\nimport './js/local-storage-info';\nimport './js/renderOnSubmit-main-page';\nimport './js/render-main-page';\nimport './js/roll-up-btn';\nimport './js/modal-students';\nimport './js/trailer';\nimport './js/modal';\nimport './js/renderModal';\nimport './js/modalBtnsAction';\nimport './js/dark-theme';\n","import FilmsApiService from './films-service';\nimport { renderFilmsToGallery } from './galleryFilmsMarkup';\nimport Pagination from 'tui-pagination';\nimport { Spinner } from './loader';\nimport { saveDataToLocalStorage } from './local-storage-info';\n\nconst FILMS_DATA = 'films-data';\n\nconst spinner = new Spinner('.spinner');\n\nconst paginationContainer = document.querySelector('#pagination');\n\nconst filmsApiService = new FilmsApiService();\n\nconst form = document.querySelector('.form__input');\nconst headerNotification = document.querySelector('.search__error-text');\n\nform.addEventListener('submit', getFilmsOnSubmit);\n\nfunction getFilmsOnSubmit(evt) {\n  evt.preventDefault();\n\n  let page = 1;\n  const inputValue = evt.currentTarget.searchQuery.value;\n  spinner.addSpinner();\n\n  if (!inputValue) {\n    headerNotification.classList.remove('visually-hidden');\n    setTimeout(() => {\n      headerNotification.classList.add('visually-hidden');\n    }, 4500);\n    spinner.removeSpinner();\n    return;\n  }\n\n  filmsApiService\n    .getFilms('search', page, inputValue)\n    .then(films => {\n      if (films.results.length === 0) {\n        headerNotification.classList.remove('visually-hidden');\n\n        setTimeout(() => {\n          headerNotification.classList.add('visually-hidden');\n        }, 4500);\n        spinner.removeSpinner();\n        return;\n      }\n      saveDataToLocalStorage(FILMS_DATA, films.results);\n\n      renderFilmsToGallery(films.results);\n      spinner.removeSpinner();\n\n      const pagination = new Pagination(paginationContainer, {\n        totalItems: `${films.total_results}`,\n        itemsPerPage: 20,\n        visiblePages: 5,\n        centerAlign: true,\n      });\n\n      pagination.reset(films.total_results);\n      pagination.on('beforeMove', e => {\n        spinner.addSpinner();\n\n        page = e.page;\n        filmsApiService.getFilms('search', page, inputValue).then(films => {\n          if (!films.results) {\n            return;\n          }\n\n          renderFilmsToGallery(films.results);\n\n          saveDataToLocalStorage(FILMS_DATA, films.results);\n\n          window.scrollTo({\n            behavior: 'smooth',\n            top: 0,\n          });\n\n          spinner.removeSpinner();\n        });\n      });\n    })\n    .catch(err => console.log(err))\n    .finally(form.reset());\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('EVgbq') + require('./helpers/bundle-manifest').resolve(\"3mDlJ\");","import ComingSoonImg from '../images/movie-poster-coming-soon.jpg';\nimport { getDataFromLocalStorage } from './local-storage-info';\nimport { DATA_STORAGE } from './genres';\nimport { getGenresFromId } from './getGenresFromId';\n\nconst list = document.querySelector('.cards__list');\n\nexport function renderFilmsToGallery(filmsArray) {\n  const genresData = getDataFromLocalStorage(DATA_STORAGE);\n  const markup = filmsArray\n    .map(\n      ({\n        poster_path,\n        title,\n        genre_ids: genreIds,\n        id,\n        release_date,\n        vote_average,\n      }) => {\n        const basePosterURL = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n        return `<li class=\"library__item\" id=\"${id}\">\n        \n        <a href=\"\" class=\"library__link\"><div class=\"library__thumb\">\n      <img class=\"library__image\" \nsrc=\"${poster_path ? basePosterURL : ComingSoonImg}\"  alt=\"${title}\" />\n    </div>\n    <div class=\"library__paragraph\">\n    <h2 class=\"library__movie\">${title}</h2>\n    <ul class=\"library__info\">\n      <li class=\"library__description\">\n        <p class=\"library__genres\">${\n          genreIds.length === 0\n            ? 'No genre'\n            : getGenresFromId(genreIds, genresData)\n        } |</p>\n      </li>\n      <li class=\"library__description\">\n        <p class=\"library__year\">${\n          release_date === '' || !release_date\n            ? 'No date'\n            : release_date.slice(0, 4)\n        }</p>\n      </li>\n      <li class=\"library__description\">\n        <p class=\"library__rating\">${vote_average.toFixed(1)}</p>\n      </li>\n    </ul>\n    </div></a>\n    \n</li>`;\n      }\n    )\n\n    .join('');\n\n  list.innerHTML = markup;\n}\n","import Pagination from 'tui-pagination';\nimport FilmsApiService from './films-service';\nimport { renderFilmsToGallery } from './galleryFilmsMarkup';\nimport { saveGenresToLocalStorage } from './genres';\nimport { Spinner } from './loader';\nimport { saveDataToLocalStorage } from './local-storage-info';\nimport * as Library from './myLibrary';\n\nconst FILMS_DATA = 'films-data';\n\nconst spinner = new Spinner('.spinner');\n\nconst paginationContainer = document.querySelector('#pagination');\nconst filmsApiService = new FilmsApiService();\nconst libraryPage = document.querySelector('.library-page');\n\nsaveGenresToLocalStorage();\n\nasync function onFirstLoad() {\n  await filmsApiService\n    .getFilms('trends')\n    .then(data => {\n      if (!data.results) {\n        return;\n      }\n      saveDataToLocalStorage(FILMS_DATA, data.results);\n\n      renderFilmsToGallery(data.results);\n\n      const pagination = new Pagination(paginationContainer, {\n        totalItems: `${data.total_results}`,\n        itemsPerPage: 20,\n        visiblePages: 5,\n        centerAlign: true,\n      });\n\n      pagination.reset(data.total_results);\n      pagination.on('beforeMove', e => {\n        spinner.addSpinner();\n\n        let page = e.page;\n        filmsApiService.getFilms('trends', page).then(data => {\n          if (!data.results) {\n            return;\n          }\n          saveDataToLocalStorage(FILMS_DATA, data.results);\n\n          renderFilmsToGallery(data.results);\n\n          window.scrollTo({\n            behavior: 'smooth',\n            top: 0,\n          });\n          spinner.removeSpinner();\n        });\n      });\n    })\n    .catch(err => console.log(err))\n    .finally();\n}\n\nsetTimeout(() => {\n  onFirstLoad();\n}, 0);\n\n// if (libraryPage) {\n//   libraryPage.addEventListener('click', Library.onWatchedBtnClick);\n// }\n"],"names":["parcelRequire","register","JSON","parse","$8Mjv6","$7d9d200756647f84$exports","getBundleURL","resolve","$5ab6f9157fd52175$var$list","document","querySelector","$5ab6f9157fd52175$export$2f9025ff7585969c","filmsArray","genresData","$x2KWZ","getDataFromLocalStorage","$twtVq","DATA_STORAGE","markup","map","poster_path","title","genre_ids","genreIds","id","release_date","vote_average","$parcel$interopDefault","length","$a0r2h","getGenresFromId","slice","toFixed","join","innerHTML","$a1a3af92ad10c763$var$FILMS_DATA","$a1a3af92ad10c763$var$spinner","$kvC6y","Spinner","$a1a3af92ad10c763$var$paginationContainer","$a1a3af92ad10c763$var$filmsApiService","default","$a1a3af92ad10c763$var$form","$a1a3af92ad10c763$var$headerNotification","addEventListener","evt","preventDefault","page","inputValue","currentTarget","searchQuery","value","addSpinner","classList","remove","setTimeout","add","removeSpinner","getFilms","then","films","results","saveDataToLocalStorage","pagination","$1VFfL","totalItems","total_results","itemsPerPage","visiblePages","centerAlign","reset","on","e","window","scrollTo","behavior","top","catch","err","console","log","finally","$389ece23d7c35ce0$var$FILMS_DATA","$389ece23d7c35ce0$var$spinner","$389ece23d7c35ce0$var$paginationContainer","$389ece23d7c35ce0$var$filmsApiService","saveGenresToLocalStorage","async","data","$389ece23d7c35ce0$var$onFirstLoad"],"version":3,"file":"index.ffde53b6.js.map"}